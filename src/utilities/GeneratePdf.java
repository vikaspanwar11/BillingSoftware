/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package utilities;

import com.itextpdf.text.BaseColor;
import java.io.File;
import java.io.FileOutputStream;
import java.io.OutputStream;
import com.itextpdf.text.Document;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

public class GeneratePdf 
{
    private static String FILE = "d:/FirstPdf.pdf";
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);
    
    static public void generateBill(HashMap<String, ArrayList> hm, String name) 
    {
        PdfPCell pdfPCell1, pdfPCell2, pdfPCell3, pdfPCell4;
        try 
        {
            //Create Document instance.
            Document document = new Document();

            //Create OutputStream instance.
            OutputStream outputStream
                    = new FileOutputStream(new File("D:\\" + name + ".pdf"));

            //Create PDFWriter instance.
            PdfWriter.getInstance(document, outputStream);

            //Open the document.
            document.open();

            Paragraph preface = new Paragraph();
            // We add one empty line
            addEmptyLine(preface, 1);
            // Lets write a big header
            preface.add(new Paragraph("Hello "+name+", below is your billing details", catFont));

            addEmptyLine(preface, 1);
            // Will create: Report generated by: _name, _date
            preface.add(new Paragraph(
                    "Bill generated by: " + System.getProperty("user.name") + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
                    smallBold));
            addEmptyLine(preface, 3);
            
            document.add(preface);

            //Create Table object, Here 4 specify the no. of columns
            PdfPTable pdfPTable = new PdfPTable(4);

            //Create cells
            pdfPCell1 = new PdfPCell(new Paragraph("Item Name"));
            pdfPCell2 = new PdfPCell(new Paragraph("Item Price"));
            pdfPCell3 = new PdfPCell(new Paragraph("Item Quantity"));
            pdfPCell4 = new PdfPCell(new Paragraph("Total Price"));

            //Add cells to table
            pdfPTable.addCell(pdfPCell1);
            pdfPTable.addCell(pdfPCell2);
            pdfPTable.addCell(pdfPCell3);
            pdfPTable.addCell(pdfPCell4);

            for (Map.Entry me : hm.entrySet()) {
                ArrayList al = (ArrayList) me.getValue();

                pdfPCell1 = new PdfPCell(new Paragraph((String) al.get(0)));
                pdfPCell2 = new PdfPCell(new Paragraph((String) al.get(1)));
                pdfPCell3 = new PdfPCell(new Paragraph((String) al.get(2)));
                pdfPCell4 = new PdfPCell(new Paragraph((String) al.get(3)));

                //Add cells to table
                pdfPTable.addCell(pdfPCell1);
                pdfPTable.addCell(pdfPCell2);
                pdfPTable.addCell(pdfPCell3);
                pdfPTable.addCell(pdfPCell4);
            }

            //Add content to the document using Table objects.
            document.add(pdfPTable);

            //Close document and outputStream.
            document.close();
            outputStream.close();

            System.out.println("Pdf created successfully.");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
}
